weights = oral.amrfam.cts$Reads.n.oral.bacteria))
# other non-significant confounding factors:
batch.vars <- c("Sampling.batch","Ext.batch","LP.batch",
"IN.batch","IN.protocol","Seq.copies.in.pool","Reads.n.raw",
"Reads.n.nonhost","Reads.prop.host","Reads.prop.human",
"Reads.n.oral.bacteria","DNA.fragment.length.median.oral",
"st.sum.oral","st.sum.nonoral")
# SUPP TABLE S2
uni_var_stats_f(oral.amrfam.cts, "Total.AMR.prop", batch.vars)
summary(glm(Total.AMR.prop ~ DNA.fragment.length.median.oral, data = oral.amrfam.cts, family = quasibinomial(link = "logit"),
weights = oral.amrfam.cts$Reads.n.oral.bacteria))
ggplot(oral.amrfam.cts, aes(DNA.fragment.length.median.oral, Total.AMR.prop))+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 3)+
annotate("text", x = 104, y = 0.00015, label = "rho: 0.457\n p: <0.001")+
coord_cartesian(xlim = c(55, 95), ylim = c(0,0.00018), clip = "off")+
scale_shape_manual(values = c(21:25), labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
scale_fill_manual(values = spec.period.cols, labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
labs(x = "Sample median DNA fragment length", y = "Total AMR load", shape = "Time period", fill = "Time period")+
theme_classic() + theme(axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13),
legend.position = "right")
##### Total AMR and human variables #####
# Plot AMR by geography
ggplot(oral.amrfam.cts, aes(Spec.latitude, Spec.longitude, fill = Total.AMR.prop, shape = Spec.known.locality))+
geom_point(size = 3)+
scale_shape_manual(values = c(21,23))+
scale_fill_distiller(palette = "Spectral")+
labs(y = "Longitude", x = "Latitude", fill = "Total AMR load", shape = "Locality known")+
theme_bw()+
theme(legend.position = "right", legend.text = element_text(size = 12), legend.title = element_text(size = 13),
axis.text = element_text(colour = "black", size = 12), axis.title = element_text(size = 13))+
facet_wrap(~ Spec.Period, nrow = 1, labeller=labeller(
Spec.Period = c(pre1950="pre 1951",`1950.70`="1951-1970",`1970.85`="1971-1985",`1985.00`="1986-2000",`2000.20`="post 2000"))
)+
theme(strip.background = element_blank(),
strip.text = element_text(face = "bold"))
# SUPP TABLE S1
summary(glm(Total.AMR.prop ~ Spec.latitude : Spec.longitude + Spec.Period + DNA.fragment.length.median.oral,
data = oral.amrfam.cts[which(oral.amrfam.cts$Spec.known.locality),],
family = quasibinomial(link = "logit"),
weights = oral.amrfam.cts[which(oral.amrfam.cts$Spec.known.locality),"Reads.n.oral.bacteria"]))
# SUPP TABLE S2
bear.vars1.stats <- uni_var_stats_f(oral.amrfam.cts, "Total.AMR.prop", c("Spec.Period","Spec.coll.year","Spec.county"))
bear.vars2.stats <- uni_var_stats_f(oral.amrfam.cts[which(oral.amrfam.cts$Spec.known.locality),], "Total.AMR.prop",
c("Spec.municipality","Spec.longitude","Spec.latitude","Spec.hist.pop.per.sqkm","Spec.HumanFootprint.mean"))
# SUPP TABLE S1
summary(glm(Total.AMR.prop ~ Spec.hist.pop.per.sqkm,
data = oral.amrfam.cts[which(oral.amrfam.cts$Spec.known.locality),],
family = quasibinomial(link = "logit"),
weights = oral.amrfam.cts[which(oral.amrfam.cts$Spec.known.locality),"Reads.n.oral.bacteria"]))
summary(glm(Total.AMR.prop ~ Spec.HumanFootprint.mean,
data = oral.amrfam.cts[which(oral.amrfam.cts$Spec.known.locality),],
family = quasibinomial(link = "logit"),
weights = oral.amrfam.cts[which(oral.amrfam.cts$Spec.known.locality),"Reads.n.oral.bacteria"]))
## distribution of human impact scores across samples vs all Sweden
hf.dist <- read.delim("data/HumanFootprint_Sweden_raster.xyz", header = F, sep = " ")
hf.dist <- hf.dist[which(hf.dist$V3 != 100),] #100 == NA (i.e. areas outside of Sweden)
summary(hf.dist$V3)
fig.human.a <- ggplot(oral.amrfam.cts, aes(Spec.hist.pop.per.sqkm, Total.AMR.prop))+
geom_vline(xintercept = 21.6, linetype = 2, size = 1, color = "#006aa8")+
annotate("text", x = 80, y = 0.00017, label = "Swedish average", color = "#006aa8")+
geom_point(size = 3)+
scale_x_continuous(limits = c(0,300))+
labs(x = "Historical human population density", y = "Total AMR load")+
theme_classic() + theme(axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13),
legend.position = "none")
fig.human.b <- ggplot(oral.amrfam.cts, aes(Spec.HumanFootprint.mean, Total.AMR.prop))+
geom_vline(xintercept = 6.164, linetype = 2, size = 1, color = "#006aa8")+
annotate("text", x = 16, y = 0.00017, label = "Swedish average", color = "#006aa8")+
geom_point(size = 3)+
scale_x_continuous(limits = c(0,50))+
labs(x = "Human Footprint Index", y = "Total AMR load")+
theme_classic() + theme(axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13),
legend.position = "none")
plot_grid(fig.human.a, fig.human.b, nrow = 2, axis = "lr", labels = c("a","b"))
tiff("figures/Figure_3_HumanImpact_vs_AMRload.tiff", units = "in", width = 5, height = 6, res = 600, compression = "zip")
plot_grid(fig.human.a, fig.human.b, nrow = 2, axis = "lr", labels = c("a","b"))
dev.off()
##### Human antibiotics use (based on publicly available data) #####
abx.usage <- read.csv("data/Sweden_antibiotics_usage_active_sub_per_kg.csv")
abx.usage$Period <- cut(abx.usage$Year, breaks = c(1800,1950,1970,1985,2000,2020),
labels = c("pre1950","1950.70","1970.85","1985.00","2000.20"),
ordered_result = T)
ggplot(melt(abx.usage, id.vars = c("Year","Period"), measure.vars = c("agriculture.total","human.total")),
aes(Year, value, group = variable))+
geom_vline(xintercept = 1950, color = "grey50", linetype = 2)+
geom_vline(xintercept = 1970, color = "grey50", linetype = 2)+
geom_vline(xintercept = 1985, color = "grey50", linetype = 2)+
geom_vline(xintercept = 2000, color = "grey50", linetype = 2)+
geom_line()+
geom_point(aes(fill = Period, shape = variable), size = 3, color = "black")+
scale_shape_manual(values = c(21:22), labels = c("Animals","Humans"))+
scale_fill_manual(values = spec.period.cols, labels = c("1971-1985","1986-2000","post 2000"))+
scale_x_continuous(limits = c(1940,2020), n.breaks = 9)+
labs(x = "Year", y = "Antibiotics use \n(kg active substance)", shape = "", fill = "Time period")+
theme_classic() + theme(axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 12),
legend.position = "none")
##### ARG diversity #####
# diversity by time period - heatmap
oral.div.period <- as.data.frame(t(sapply(levels(oral.amrfam.cts$Spec.Period), function(x){
colSums(oral.amrfam.cts[which(oral.amrfam.cts$Spec.Period == x),c(2:23)], na.rm = T)
})))
temp.arg.n <- ncol(oral.div.period)
oral.div.period$Spec.Period <- factor(row.names(oral.div.period), levels = levels(oral.amrfam.cts$Spec.Period), ordered = TRUE)
oral.div.period$Total.AMR.load <- rowSums(oral.div.period[,1:temp.arg.n])
oral.div.period$Sample.ct <- sapply(as.character(oral.div.period$Spec.Period), function(x){
nrow(oral.amrfam.cts[which(oral.amrfam.cts$Spec.Period == x),])
})
oral.div.period$ARG.num <- specnumber(oral.div.period[,1:temp.arg.n])
oral.div.period$ARG.shan=diversity(oral.div.period[,1:temp.arg.n], index = "shannon")
oral.div.period$Reads.n.oral.summed <- sapply(as.character(oral.div.period$Spec.Period), function(x){
sum(oral.amrfam.cts[which(oral.amrfam.cts$Spec.Period == x),"Reads.n.oral.bacteria"])
})
oral.div.period.hm <- as.matrix(oral.div.period[,1:temp.arg.n] / oral.div.period$Reads.n.oral.summed)
colnames(oral.div.period.hm) <- gsub("ARG.","",colnames(oral.div.period.hm))
oral.div.period.hm.log <- oral.div.period.hm
oral.div.period.hm.log[oral.div.period.hm.log == 0] <- NA
oral.div.period.hm.log <- log10(oral.div.period.hm.log)
oral.div.period.hm.P <- pheatmap(oral.div.period.hm, cluster_rows = F, cluster_cols = T, scale = "row")
oral.div.period.hm.P.clust <- oral.div.period.hm.P$tree_col
arg.hm.ord.names <- colnames(oral.div.period.hm.log[,oral.div.period.hm.P.clust$order])
# manually tweak order
arg.hm.ord.names <- arg.hm.ord.names[c(6:9,5,10:14,3:4,2,15:16,1,17:22)]
# add annotation to ARGs
arg.anno <- data.frame(
Mechanism=sapply(arg.hm.ord.names, function(x){
if(x %in% c("rpoB","parY","lipA","ileS","erm","vanS")) { "Target_alteration" }
else if(x %in% c("RND","MATE","MFS","MFS.RND","ABC")) { "Efflux_pump" }
else if(x %in% c("ABCF")) { "Target_protection" }
else if(x %in% c("fos","OXA","AAC6p","APH6","ANT3pp","APH3pp","APH3p","SAT")) { "Antibiotic_inactivation" }
else if(x %in% c("sul")) { "Target_replacement" }
else if(x %in% c("porin")) { "Reduced_permeability" }
else { "NA" }
}),
Antibiotic_class=sapply(arg.hm.ord.names, function(x){
if(x %in% c("RND","MATE","MFS","MFS.RND","ABC","porin","ABCF")) { "Multi-drug" }
else if(x %in% c("AAC6p","APH6","ANT3pp","APH3pp","APH3p")) { "Aminoglycosides" }
else if(x %in% c("ileS","erm","SAT")) { "MLS" }
else if(x %in% c("rpoB")) { "Rifampicin" }
else if(x %in% c("parY")) { "Aminocoumarin" }
else if(x %in% c("lipA")) { "Polymyxins" }
else if(x %in% c("fos")) { "Fosfomycin" }
else if(x %in% c("OXA")) { "Beta-lactams" }
else if(x %in% c("vanS")) { "Vancomycin" }
else if(x %in% c("sul")) { "Sulfonamides" }
else { "NA" }
})
)
row.names(arg.anno) <- arg.hm.ord.names
arg.hm.cols1 <- brewer.pal(length(unique(arg.anno$Mechanism)),"Set2")
names(arg.hm.cols1) <- unique(arg.anno$Mechanism)
arg.hm.cols2 <- brewer.pal(length(unique(arg.anno$Antibiotic_class)),"Set3")
names(arg.hm.cols2) <- unique(arg.anno$Antibiotic_class)
arg.hm.cols <- list(Mechanism=arg.hm.cols1, Antibiotic_class=arg.hm.cols2)
pheatmap(oral.div.period.hm.log[,arg.hm.ord.names], cluster_rows = F, cluster_cols = F,
labels_row = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"),
labels_col = c("AAC(6')","OXA","erm","fos","sul","APH(3'')","vanS","SAT",
"ANT(3'')","APH(6')","GBP","MFS/RND","APH(3')","MFS","MATE",
"ABC","ileS","pgpB","ABC-F","parY","RND","rpoB"),
annotation_col = arg.anno, annotation_colors = arg.hm.cols)
## ARG diversity subsampling to control for sequencing effort
# note that "Ua012" "Ua074" "Ua088" are zero so won't be in the subsampling
arg.readbased <- subset(oral.keep, sample_species %in% as.character(ua.amr.meta$SampleID))
arg.readbased$Spec.Period <- sapply(as.character(arg.readbased$sample_species), function(x){
ua.amr.meta[which(ua.amr.meta$SampleID == x), "Spec.Period"]
})
table(arg.readbased$Spec.Period)
arg.num.subsample.READS <- arg_num_subsample_f(arg.readbased, "Spec.Period", "AMR.Gene.Family", 500, 1000, F)
arg.num.subsample.READS$Spec.Period <- factor(arg.num.subsample.READS$Variable, levels = levels(oral.amrfam.cts$Spec.Period), ordered = T)
ggplot(arg.num.subsample.READS, aes(Spec.Period, Test))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(color = Spec.Period), size = 2, position = position_jitterdodge(jitter.width = 1))+
scale_color_manual(values = spec.period.cols)+
scale_y_continuous(limits = c(0,16))+
scale_x_discrete(labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
labs(x = "Time period", y = "ARG family number", title = "Subsampling by sequencing depth")+
theme_classic() + theme(axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13),
legend.position = "none", axis.text.x = element_text(angle = 0))
tiff("figures/Supp_Figure_S2_ARGdiversity_subsample_reads.tiff", units = "in", width = 5.5, height = 5.5, res = 600, compression = "zip")
ggplot(arg.num.subsample.READS, aes(Spec.Period, Test))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(color = Spec.Period), size = 2, position = position_jitterdodge(jitter.width = 1))+
scale_color_manual(values = spec.period.cols)+
scale_y_continuous(limits = c(0,16))+
scale_x_discrete(labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
labs(x = "Time period", y = "ARG family number", title = "Subsampling by sequencing depth")+
theme_classic() + theme(axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13),
legend.position = "none", axis.text.x = element_text(angle = 0))
dev.off()
## ARG diversity subsampling to control for sample size
arg.num.subsample.SAMPLES <- arg_num_subsample_SAMPLES_f(oral.amrfam.cts, "Spec.Period", c(2:23), 8, 1000, F)
arg.num.subsample.SAMPLES$Spec.Period <- factor(arg.num.subsample.SAMPLES$Variable, levels = levels(oral.amrfam.cts$Spec.Period), ordered = T)
ggplot(arg.num.subsample.SAMPLES, aes(Spec.Period, Test))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(color = Spec.Period), size = 2, position = position_jitterdodge(jitter.width = 1))+
scale_color_manual(values = spec.period.cols)+
geom_vline(xintercept = 1.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 2.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 3.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 4.5, color = "grey50", linetype = 2)+
scale_y_continuous(limits = c(0,16))+
scale_x_discrete(labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
labs(x = "Time period", y = "ARG family number")+
theme_classic() + theme(axis.text = element_text(size = 10, colour = "black"), axis.title = element_text(size = 11),
legend.position = "none", axis.text.x = element_text(size = 9))
# mean
for (x in levels(arg.num.subsample.SAMPLES$Spec.Period)){
print(mean(arg.num.subsample.SAMPLES[which(arg.num.subsample.SAMPLES$Spec.Period == x),"Test"]))
}
Sfig.arg.abcf <- ggplot(oral.amrfam.prop, aes(Spec.Period, ARG.ABCF))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "ARG family load", title = "ABC-F ribosomal protection protein")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
Sfig.arg.rpoB <- ggplot(oral.amrfam.prop, aes(Spec.Period, ARG.rpoB))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "ARG family load", title = "rifamycin-resistant rpoB")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
Sfig.arg.ileS <- ggplot(oral.amrfam.prop, aes(Spec.Period, ARG.ileS))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "ARG family load", title = "resistant ileS")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
Sfig.arg.ABC <- ggplot(oral.amrfam.prop, aes(Spec.Period, ARG.ABC))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "ARG family load", title = "ABC efflux pump")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
Sfig.arg.lipA <- ggplot(oral.amrfam.prop, aes(Spec.Period, ARG.lipA))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "ARG family load", title = "lipid A phosphotase (pgpB)")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
Sfig.arg.parY <- ggplot(oral.amrfam.prop, aes(Spec.Period, ARG.parY))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "ARG family load", title = "aminocoumarin resistant parY")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
# SUPP TABLE S1
summary(glm(ARG.ABCF ~ Spec.Period + DNA.fragment.length.median.oral,
data = oral.amrfam.prop, family = quasibinomial(link = "logit"),
weights = oral.amrfam.prop$Reads.n.oral.bacteria))
##### oral bacteria ordination in bears #####
k.oral.bears <- k.oral[sample.id.byyear,]
k.oral.bears <- k.oral.bears[ ,colSums(k.oral.bears) > 0]
# Euclidean
k.oral.bears.clr <- apply(k.oral.bears, MARGIN = c(1,2), FUN = function(x) x+1)
k.oral.bears.clr <- as.data.frame(t(apply(k.oral.bears.clr, 1, function(x){log(x) - mean(log(x))})))
k.oral.bears.euc <- vegdist(k.oral.bears.clr, method = "euclidean")
k.oral.bears.euc.nmds <- metaMDS(k.oral.bears.euc, k = 2, try = 20, trymax = 150, maxit = 2000)
# solution reached run 20
k.oral.bears.euc.nmds$stress
# 0.1881088
k.oral.bears.euc.nmds.scores <- as.data.frame(scores(k.oral.bears.euc.nmds))
k.oral.bears.euc.nmds.scores$SampleID <- row.names(k.oral.bears.euc.nmds.scores)
k.oral.bears.euc.nmds.scores <- merge(k.oral.bears.euc.nmds.scores, oral.amrfam.cts, by = "SampleID")
Sfig.oral.ord.a <- ggplot(k.oral.bears.euc.nmds.scores,aes(NMDS1, NMDS2,fill=Spec.Period, shape=Spec.Period))+
geom_vline(xintercept = 0, linetype = 3, size = 1, color = "grey42") + geom_hline(yintercept = 0, linetype = 3, size = 1, color = "grey42")+
geom_point(size = 4)+
scale_shape_manual(values = c(21:25), labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
scale_fill_manual(values = spec.period.cols, labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
scale_x_continuous(limits = c(-55,55)) + scale_y_continuous(limits = c(-55,55))+
coord_fixed(ratio = 1)+
labs(shape = "Time period", fill = "Time period")+
theme_bw() + theme(panel.grid = element_blank(), legend.position = "right",
axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13), panel.border = element_rect(size = 1.2))
Sfig.oral.ord.c <- ggplot(k.oral.bears.euc.nmds.scores,aes(NMDS1, NMDS2, color=Total.AMR.prop))+
geom_vline(xintercept = 0, linetype = 3, size = 1, color = "grey42") + geom_hline(yintercept = 0, linetype = 3, size = 1, color = "grey42")+
geom_point(size = 4)+
scale_color_distiller(palette = "Spectral")+
scale_x_continuous(limits = c(-55,55)) + scale_y_continuous(limits = c(-55,55))+
coord_fixed(ratio = 1)+
labs(color = "Total AMR load")+
theme_bw() + theme(panel.grid = element_blank(), legend.position = "right",
axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13), panel.border = element_rect(size = 1.2))
Sfig.oral.ord.l1 <- get_legend(
Sfig.oral.ord.a + theme(legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.box.margin = margin(l=5,r=5))
)
Sfig.oral.ord.l2 <- get_legend(
Sfig.oral.ord.c + theme(legend.text = element_text(size = 12),
legend.title = element_text(size = 14,  face = "bold"),
legend.box.margin = margin(l=5,r=5))
)
adonis(k.oral.bears.euc ~ k.oral.bears.euc.nmds.scores$Spec.Period, permutations = 1000)
adonis(k.oral.bears.euc ~ k.oral.bears.euc.nmds.scores$Total.AMR.prop, permutations = 1000)
# Jaccard binary
k.oral.bears.jac <- vegdist(k.oral.bears, method = "jaccard", binary = TRUE)
k.oral.bears.jac.nmds <- metaMDS(k.oral.bears.jac, k = 2, try = 20, trymax = 150, maxit = 2000)
# solution reached run 20
k.oral.bears.jac.nmds$stress
# 0.1315104
k.oral.bears.jac.nmds.scores <- as.data.frame(scores(k.oral.bears.jac.nmds))
k.oral.bears.jac.nmds.scores$SampleID <- row.names(k.oral.bears.jac.nmds.scores)
k.oral.bears.jac.nmds.scores <- merge(k.oral.bears.jac.nmds.scores, oral.amrfam.cts, by = "SampleID")
Sfig.oral.ord.b <- ggplot(k.oral.bears.jac.nmds.scores,aes(NMDS1, NMDS2,fill=Spec.Period, shape=Spec.Period))+
geom_vline(xintercept = 0, linetype = 3, size = 1, color = "grey42") + geom_hline(yintercept = 0, linetype = 3, size = 1, color = "grey42")+
geom_point(size = 4)+
scale_shape_manual(values = c(21:25), labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
scale_fill_manual(values = spec.period.cols, labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
scale_x_continuous(limits = c(-0.6,0.6)) + scale_y_continuous(limits = c(-0.6,0.6))+
coord_fixed(ratio = 1)+
labs(shape = "Time period", fill = "Time period")+
theme_bw() + theme(panel.grid = element_blank(), legend.position = "none",
axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13), panel.border = element_rect(size = 1.2))
Sfig.oral.ord.d <- ggplot(k.oral.bears.jac.nmds.scores,aes(NMDS1, NMDS2, color=Total.AMR.prop))+
geom_vline(xintercept = 0, linetype = 3, size = 1, color = "grey42") + geom_hline(yintercept = 0, linetype = 3, size = 1, color = "grey42")+
geom_point(size = 4)+
scale_color_distiller(palette = "Spectral")+
scale_x_continuous(limits = c(-0.6,0.6)) + scale_y_continuous(limits = c(-0.6,0.6))+
coord_fixed(ratio = 1)+
labs(color = "Total AMR load")+
theme_bw() + theme(panel.grid = element_blank(), legend.position = "none",
axis.text = element_text(size = 12, colour = "black"), axis.title = element_text(size = 13), panel.border = element_rect(size = 1.2))
adonis(k.oral.bears.jac ~ k.oral.bears.jac.nmds.scores$Spec.Period, permutations = 1000)
adonis(k.oral.bears.jac ~ k.oral.bears.jac.nmds.scores$Total.AMR.prop, permutations = 1000)
##### oral bacterial genera correlations with ARGs #####
k.oral.genus.prop.bears <- k.oral.genus.prop[sample.id.byyear,]
k.oral.genus.prop.bears <- k.oral.genus.prop.bears[,colSums(k.oral.genus.prop.bears) > 0]
# correlations between the four most abundant ARGs and bacteria genus abundance
crepe.out <- ccrepe(x = oral.amrfam.prop[,c("ARG.ABCF","ARG.ileS","ARG.RND","ARG.rpoB")],
y = k.oral.genus.prop.bears,
sim.score = nc.score, iterations = 20, min.subj = 20, verbose = T)
crepe.out.m <- merge(melt(crepe.out$q.values, id.vars = row.names(crepe.out$q.values), value.name = "q.value"),
melt(crepe.out$sim.score, id.vars = row.names(crepe.out$sim.score), value.name = "sim.score"),
by = c("Var1","Var2"))
names(crepe.out.m)[1:2] <- c("ARG.class","Genus")
crepe.out.m[which(crepe.out.m$q.value < 0.05 & crepe.out.m$sim.score > 0),]
# Supp Figure 3 plots
Sfig.gen.actino <- ggplot(k.genus.arg, aes(Spec.Period, Actinomyces))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "Genus relative abundance", title = "Actinomyces")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
# Supp Figure 3 plots
k.genus.arg <- k.oral.genus.prop[,c("Neisseria","Parvimonas","Actinomyces","Gemella")]
k.genus.arg$SampleID <- row.names(k.genus.arg)
k.genus.arg <- merge(k.genus.arg, oral.amrfam.prop[,c("SampleID","ARG.ABCF","ARG.ileS","ARG.ABC","ARG.RND","ARG.rpoB","Spec.Period","Reads.length.med.oral","Reads.n.oralbact")],
by = "SampleID")
names(oral.amrfam.prop)
names(k.oral.genus)
k.genus.arg <- merge(k.genus.arg, oral.amrfam.prop[,c("SampleID","ARG.ABCF","ARG.ileS","ARG.ABC","ARG.RND","ARG.rpoB","Spec.Period","DNA.fragment.length.median.oral","Reads.n.oral.bacteria")],
by = "SampleID")
k.genus.arg$Bracken.oral.ct <- sapply(k.genus.arg$SampleID, function(x){
k.oral.genus[which(k.oral.genus$SampleID == x),"Bracken.oral.ct"]
})
Sfig.gen.actino <- ggplot(k.genus.arg, aes(Spec.Period, Actinomyces))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "Genus relative abundance", title = "Actinomyces")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
Sfig.gen.parvi <- ggplot(k.genus.arg, aes(Spec.Period, Parvimonas))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "Genus relative abundance", title = "Parvimonas")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
Sfig.gen.gamella <- ggplot(k.genus.arg, aes(Spec.Period, Gemella))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
scale_x_discrete(labels = c("pre \n1951","1951-\n1970","1971-\n1985","1986-\n2000","post\n2000"))+
labs(x = "", y = "Genus relative abundance", title = "Gemella")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
lm.abcf <- lm(ARG.ABCF ~ Actinomyces, data=k.genus.arg)
Sfig.cor.abcf <- ggplot(k.genus.arg, aes(Actinomyces, ARG.ABCF))+
geom_abline(slope = lm.abcf$coefficients[[2]], intercept = lm.abcf$coefficients[[1]], color = "grey66", linetype=1, size = 1)+
geom_point(size = 2, color = "black")+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
labs(x = "Genus relative abundance", y = "ARG family load", title = "ABC-F vs Actinomyces")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
lm.rpob <- lm(ARG.rpoB ~ Actinomyces, data=k.genus.arg)
Sfig.cor.rpoB <- ggplot(k.genus.arg, aes(Actinomyces, ARG.rpoB))+
geom_abline(slope = lm.rpob$coefficients[[2]], intercept = lm.rpob$coefficients[[1]], color = "grey66", linetype=1, size = 1)+
geom_point(size = 2, color = "black")+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
labs(x = "Genus relative abundance", y = "ARG family load", title = "rpoB vs Actinomyces")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
lm.parvi <- lm(ARG.ileS ~ Parvimonas, data=k.genus.arg)
Sfig.cor.parvi <- ggplot(k.genus.arg, aes(Parvimonas, ARG.ileS))+
geom_abline(slope = lm.parvi$coefficients[[2]], intercept = lm.parvi$coefficients[[1]], color = "grey66", linetype=1, size = 1)+
geom_point(size = 2, color = "black")+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
labs(x = "Genus relative abundance", y = "ARG family load", title = "ileS vs Parvimonas")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
lm.gem <- lm(ARG.ileS ~ Gemella, data=k.genus.arg)
Sfig.cor.gem <- ggplot(k.genus.arg, aes(Gemella, ARG.ileS))+
geom_abline(slope = lm.gem$coefficients[[2]], intercept = lm.gem$coefficients[[1]], color = "grey66", linetype=1, size = 1)+
geom_point(size = 2, color = "black")+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
labs(x = "Genus relative abundance", y = "ARG family load", title = "ileS vs Gemella")+
theme_classic() + theme(axis.text = element_text(colour = "black", size = 10), plot.title = element_text(size = 11, face = "bold"), legend.position = "none")
##### Supp Figure 3 #####
Sfig.arg.all <- plot_grid(Sfig.arg.ABC, Sfig.arg.lipA, Sfig.arg.parY,
Sfig.arg.abcf, Sfig.arg.rpoB, Sfig.arg.ileS,
Sfig.gen.actino, Sfig.gen.parvi, Sfig.gen.gamella,
labels = c("A","B","C","D","E","F","G","H","I"),
ncol = 3, align = "hv", axis = "tblr")
Sfig.cor.all <- plot_grid(Sfig.cor.abcf, Sfig.cor.rpoB, Sfig.cor.parvi, Sfig.cor.gem,
labels = c("J","K","L","M"), nrow = 1, align = "hv", axis = "tblr")
Sfig.oral.ord.presence <- plot_grid((Sfig.oral.ord.b + theme(legend.position = "none")), Sfig.oral.ord.l1, NULL,
(Sfig.oral.ord.d + theme(legend.position = "none")), Sfig.oral.ord.l2, NULL,
labels = c("O","","","P","",""),
nrow = 1, rel_widths = c(1,0.5,0.5,1,0.5,0.5))
plot_grid(Sfig.arg.all, Sfig.cor.all, Sfig.oral.ord.presence,
nrow = 3, align = "hv", axis = "tblr", rel_heights = c(3,1,1.5))
## the epic supp figure
tiff("figures/Supp_Figure_S2_ARG_family_and_oral_genera.tiff", units = "in", width = 12, height = 12, res = 600, compression = "zip")
plot_grid(Sfig.arg.all, Sfig.cor.all, Sfig.oral.ord.presence,
nrow = 3, align = "hv", axis = "tblr", rel_heights = c(3,1,1.5))
dev.off()
##### Figure 2 #####
fig.arg.RND <- ggplot(oral.amrfam.prop, aes(Spec.Period, ARG.RND))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
geom_vline(xintercept = 1.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 2.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 3.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 4.5, color = "grey50", linetype = 2)+
scale_x_discrete(labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
labs(x = "Time period", y = "RND family load")+
theme_classic() + theme(axis.text = element_text(size = 10, colour = "black"), axis.title = element_text(size = 11),
legend.position = "none", axis.text.x = element_text(size = 9))
fig.gen.neiss <- ggplot(k.genus.arg, aes(Spec.Period, Neisseria))+
geom_boxplot(outlier.colour = NA)+
geom_point(aes(fill = Spec.Period, shape = Spec.Period), size = 2, position = position_jitterdodge())+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
geom_vline(xintercept = 1.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 2.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 3.5, color = "grey50", linetype = 2)+
geom_vline(xintercept = 4.5, color = "grey50", linetype = 2)+
scale_x_discrete(labels = c("pre 1951","1951-1970","1971-1985","1986-2000","post 2000"))+
labs(x = "Time period", y = "Neisseria relative abundance")+
theme_classic() + theme(axis.text = element_text(size = 10, colour = "black"), axis.title = element_text(size = 11),
legend.position = "none", axis.text.x = element_text(size = 10))
lm.rnd <- lm(ARG.RND ~ Neisseria, data=k.genus.arg)
fig.cor.rnd <- ggplot(k.genus.arg, aes(Neisseria, ARG.RND))+
geom_abline(slope = lm.rnd$coefficients[[2]], intercept = lm.rnd$coefficients[[1]], color = "grey66", linetype=1, size = 1)+
geom_point(size = 2, color = "black")+
#annotate("text", x = 0.15, y = max(k.genus.arg$ARG.RND), label = "paste(\"cor = 0.545, \", italic(p)[adj] < 0.001)", parse = TRUE, color = "black")+
scale_shape_manual(values = c(21:25))+
scale_fill_manual(values = spec.period.cols)+
labs(x = "Neisseria relative abundance", y = "RND family load")+
theme_classic() + theme(axis.text = element_text(size = 10, colour = "black"), axis.title = element_text(size = 11),
legend.position = "none", axis.text.x = element_text(size = 10))
fig3.p1 <- plot_grid(fig.arg.RND, fig.gen.neiss, fig.cor.rnd,
nrow = 1, align = "hv", axis = "tblr",
rel_widths = c(1,1,0.75))
fig3.leg <- plot_grid(Sfig.oral.ord.l1,
Sfig.oral.ord.l2,
nrow = 2, align = "hv", axis = "tblr")
plot_grid(fig.arg.RND, fig.gen.neiss, fig.cor.rnd,
Sfig.oral.ord.a + theme(legend.position = "none", axis.text = element_text(size = 10, colour = "black"), axis.title = element_text(size = 11), panel.border = element_rect()),
Sfig.oral.ord.c + theme(legend.position = "none", axis.text = element_text(size = 10, colour = "black"), axis.title = element_text(size = 11), panel.border = element_rect()),
fig3.leg,
nrow = 2, rel_widths = c(1,1,0.75,1,1,0.75),
align = "hv", axis = "tblr")
tiff("figures/Figure_2_ARG_family_and_oral_bacteria.tiff", units = "in", width = 12, height = 8.5, res = 600, compression = "zip")
plot_grid(fig.arg.RND, fig.gen.neiss, fig.cor.rnd,
Sfig.oral.ord.a + theme(legend.position = "none", axis.text = element_text(size = 10, colour = "black"), axis.title = element_text(size = 11), panel.border = element_rect()),
Sfig.oral.ord.c + theme(legend.position = "none", axis.text = element_text(size = 10, colour = "black"), axis.title = element_text(size = 11), panel.border = element_rect()),
fig3.leg,
nrow = 2, rel_widths = c(1,1,0.75,1,1,0.75),
align = "hv", axis = "tblr")
dev.off()
mean(ua.amr.meta$Spec.age.years)
mean(ua.amr.meta$Spec.age.years, na.rm = T)
ua.amr.meta$Spec.age.years.[1:5]
ua.amr.meta$Spec.age.years
table(ua.amr.meta$Spec.coll.year.type)
table(ua.amr.meta$Spec.sex)
table(ua.amr.meta$Spec.age.years)
as.numeric(ua.amr.meta[which(ua.amr.meta$Spec.age.years %in% c("Adult","notAdult","unknown")),"Spec.age.years"])
as.numeric(ua.amr.meta[which(!ua.amr.meta$Spec.age.years %in% c("Adult","notAdult","unknown")),"Spec.age.years"])
summary(as.numeric(ua.amr.meta[which(!ua.amr.meta$Spec.age.years %in% c("Adult","notAdult","unknown")),"Spec.age.years"]))
# Basic information on bears for results & methods
summary(ua.amr.meta$Spec.coll.year)
